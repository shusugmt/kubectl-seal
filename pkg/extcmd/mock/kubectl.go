// Code generated by MockGen. DO NOT EDIT.
// Source: kubectl.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockKubectl is a mock of Kubectl interface.
type MockKubectl struct {
	ctrl     *gomock.Controller
	recorder *MockKubectlMockRecorder
}

// MockKubectlMockRecorder is the mock recorder for MockKubectl.
type MockKubectlMockRecorder struct {
	mock *MockKubectl
}

// NewMockKubectl creates a new mock instance.
func NewMockKubectl(ctrl *gomock.Controller) *MockKubectl {
	mock := &MockKubectl{ctrl: ctrl}
	mock.recorder = &MockKubectlMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubectl) EXPECT() *MockKubectlMockRecorder {
	return m.recorder
}

// GetSecrets mocks base method.
func (m *MockKubectl) GetSecrets(arg0 string, arg1 []string) (*v1.SecretList, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetSecrets", arg0, arg1)
	ret0, _ := ret[0].(*v1.SecretList)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetSecrets indicates an expected call of GetSecrets.
func (mr *MockKubectlMockRecorder) GetSecrets(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetSecrets", reflect.TypeOf((*MockKubectl)(nil).GetSecrets), arg0, arg1)
}
