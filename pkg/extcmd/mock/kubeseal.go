// Code generated by MockGen. DO NOT EDIT.
// Source: kubeseal.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	v1alpha1 "github.com/bitnami-labs/sealed-secrets/pkg/apis/sealed-secrets/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	v1 "k8s.io/api/core/v1"
)

// MockKubeseal is a mock of Kubeseal interface.
type MockKubeseal struct {
	ctrl     *gomock.Controller
	recorder *MockKubesealMockRecorder
}

// MockKubesealMockRecorder is the mock recorder for MockKubeseal.
type MockKubesealMockRecorder struct {
	mock *MockKubeseal
}

// NewMockKubeseal creates a new mock instance.
func NewMockKubeseal(ctrl *gomock.Controller) *MockKubeseal {
	mock := &MockKubeseal{ctrl: ctrl}
	mock.recorder = &MockKubesealMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockKubeseal) EXPECT() *MockKubesealMockRecorder {
	return m.recorder
}

// EncryptRaw mocks base method.
func (m *MockKubeseal) EncryptRaw(arg0 []byte, arg1 *v1.Secret) ([]byte, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EncryptRaw", arg0, arg1)
	ret0, _ := ret[0].([]byte)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// EncryptRaw indicates an expected call of EncryptRaw.
func (mr *MockKubesealMockRecorder) EncryptRaw(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EncryptRaw", reflect.TypeOf((*MockKubeseal)(nil).EncryptRaw), arg0, arg1)
}

// Seal mocks base method.
func (m *MockKubeseal) Seal(secret *v1.Secret) (*v1alpha1.SealedSecret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Seal", secret)
	ret0, _ := ret[0].(*v1alpha1.SealedSecret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Seal indicates an expected call of Seal.
func (mr *MockKubesealMockRecorder) Seal(secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Seal", reflect.TypeOf((*MockKubeseal)(nil).Seal), secret)
}

// Unseal mocks base method.
func (m *MockKubeseal) Unseal(secret *v1.SecretList) (*v1.Secret, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Unseal", secret)
	ret0, _ := ret[0].(*v1.Secret)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Unseal indicates an expected call of Unseal.
func (mr *MockKubesealMockRecorder) Unseal(secret interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Unseal", reflect.TypeOf((*MockKubeseal)(nil).Unseal), secret)
}
